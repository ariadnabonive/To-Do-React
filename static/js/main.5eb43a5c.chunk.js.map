{"version":3,"sources":["ToDoContext/index.js","ToDoContext/useLocalStorage.js","ToDoCounter/index.js","ToDoSearch/index.js","ToDoList/index.js","ToDoIcon/index.js","ToDoIcon/CompleteIcon.js","ToDoIcon/DeleteIcon.js","ToDoItem/index.js","ToDoForm/index.js","CreateToDoButton/index.js","Modal/index.js","ToDosError/index.js","ToDosLoading/index.js","EmptyToDos/index.js","App/AppUI.js","App/index.js","index.js"],"names":["ToDoContext","React","createContext","ToDoProvider","props","_useLocalStorage","itemName","initialValue","_React$useState","useState","_React$useState2","Object","slicedToArray","error","setError","_React$useState3","_React$useState4","loading","setLoading","_React$useState5","_React$useState6","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalToDos","searchedTodos","todoText","text","toLowerCase","searchText","includes","react_default","a","createElement","Provider","value","addTodo","newTodos","toConsumableArray","push","completeTodo","todoIndex","findIndex","estado","deleteTodo","splice","children","ToDoCounter","_React$useContext","useContext","className","ToDoSearch","placeholder","onChange","event","console","log","target","ToDoList","iconTypes","check","color","index_esm","fill","delete","ToDoIcon","_ref","type","_ref$color","onClick","concat","CompleteIcon","onComplete","src_ToDoIcon_ToDoIcon","DeleteIcon","onDelete","ToDoItem","ToDoForm","newToDoValue","setNewToDoValue","onSubmit","preventDefault","CreateToDoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","ToDosError","ToDosLoading","EmptyToDos","AppUI","Fragment","ToDoCounter_ToDoCounter","ToDoSearch_ToDoSearch","ToDoList_ToDoList","ToDosLoading_ToDosLoading","EmptyToDos_EmptyToDos","map","ToDoItem_ToDoItem","key","Modal_Modal","ToDoForm_ToDoForm","CreateToDoButton_CreateToDoButton","App","createRoot","render","StrictMode","src_App"],"mappings":"+YAIA,IAAOA,EAAcC,IAAMC,gBAE3B,SAASC,EAAcC,GAAO,IAAAC,ECH9B,SAAyBC,EAAUC,GAAc,IAAAC,EACpBP,IAAMQ,UAAS,GADKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvCK,EADuCH,EAAA,GAChCI,EADgCJ,EAAA,GAAAK,EAEhBd,IAAMQ,UAAS,GAFCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEvCE,EAFuCD,EAAA,GAE9BE,EAF8BF,EAAA,GAAAG,EAGtBlB,IAAMQ,SAASF,GAHOa,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGvCE,EAHuCD,EAAA,GAGjCE,EAHiCF,EAAA,GAwC7C,OAnCAnB,IAAMsB,UAAU,WACdC,WAAW,WACT,IAEE,IACIC,EADEC,EAAmBC,aAAaC,QAAQtB,GAIzCoB,EAIHD,EAAaI,KAAKC,MAAMJ,IAHxBC,aAAaL,QAAQhB,EAAUuB,KAAKE,UAAUxB,IAC9CkB,EAAalB,GAKfe,EAAQG,GACRP,GAAW,GACX,MAAML,GACJC,EAASD,KAEZ,OAeE,CACLQ,OACAW,SAbe,SAACC,GAChB,IACE,IAAMC,EAAkBL,KAAKE,UAAUE,GACvCN,aAAaL,QAAQhB,EAAU4B,GAC/BZ,EAAQW,GACR,MAAMpB,GACNC,EAASD,KAQXI,UACAJ,SDjCEsB,CAAgB,WAAY,IAJtBC,EAJgB/B,EAItBgB,KACUgB,EALYhC,EAKtB2B,SACAf,EANsBZ,EAMtBY,QACAJ,EAPsBR,EAOtBQ,MAPsBL,EAUYP,IAAMQ,SAAS,IAV3BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAUnB8B,EAVmB5B,EAAA,GAUN6B,EAVM7B,EAAA,GAAAK,EAWQd,IAAMQ,UAAS,GAXvBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAWnByB,EAXmBxB,EAAA,GAWRyB,EAXQzB,EAAA,GAapB0B,EAAiBN,EAAMO,OAAO,SAAAC,GAAI,QAAMA,EAAKC,YAAWC,OACxDC,EAAaX,EAAMU,OAErBE,EAAgB,GAGhBA,GADCV,EAAYQ,QAAU,EACPV,EAEAA,EAAMO,OAAO,SAAAC,GAC7B,IAAMK,EAAWL,EAAKM,KAAKC,cACrBC,EAAad,EAAYa,cAC/B,OAAOF,EAASI,SAASD,KA+B7B,OACIE,EAAAC,EAAAC,cAACxD,EAAYyD,SAAb,CAAsBC,MAAO,CACzBzC,UACAJ,QACAkC,aACAL,iBACAJ,cACAC,iBACAS,gBACAW,QApCQ,SAACT,GACb,IAAMU,EAAQjD,OAAAkD,EAAA,EAAAlD,CAAOyB,GACrBwB,EAASE,KAAK,CACVjB,WAAW,EACXK,SAEJb,EAAUuB,IA+BNG,aA5Ba,SAACb,GAClB,IAAMc,EAAY5B,EAAM6B,UAAU,SAAArB,GAAI,OAAIA,EAAKM,OAASA,IAClDU,EAAQjD,OAAAkD,EAAA,EAAAlD,CAAOyB,GACjB8B,EAASN,EAASI,GAAWnB,UACjCe,EAASI,GAAWnB,WAAYqB,EAChC7B,EAAUuB,IAwBNO,WArBW,SAACjB,GAChB,IAAMc,EAAY5B,EAAM6B,UAAU,SAAArB,GAAI,OAAIA,EAAKM,OAASA,IAClDU,EAAQjD,OAAAkD,EAAA,EAAAlD,CAAOyB,GACrBwB,EAASQ,OAAOJ,EAAW,GAC3B3B,EAAUuB,IAkBNpB,YACAC,iBAECrC,EAAMiE,gBEvEnB,SAASC,IAAc,IAAAC,EACkBtE,IAAMuE,WAAWxE,GAA/C+C,EADYwB,EACZxB,WAAYL,EADA6B,EACA7B,eAEnB,OACIY,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,eAAd,kBAA4C/B,EAA5C,OAAgEK,EAAhE,iBCLR,SAAS2B,IAAc,IAAAH,EACmBtE,IAAMuE,WAAWxE,GAAhDsC,EADYiC,EACZjC,YAAaC,EADDgC,EACChC,eAOpB,OACIe,EAAAC,EAAAC,cAAA,SACAiB,UAAU,aACVE,YAAY,aACZjB,MAAOpB,EACPsC,SAVwB,SAACC,GACzBC,QAAQC,IAAIF,EAAMG,OAAOtB,OACzBnB,EAAesC,EAAMG,OAAOtB,gBCNpC,SAASuB,EAAU7E,GACf,OACIkD,EAAAC,EAAAC,cAAA,WAASiB,UAAU,YACfnB,EAAAC,EAAAC,cAAA,UACKpD,EAAMiE,4BCFjBa,EAAY,CACdC,MAAU,SAAAC,GAAK,OACX9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAeZ,UAAU,2BAA2Ba,KAAMF,KAE9DG,OAAW,SAAAH,GAAK,OACZ9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAASZ,UAAU,4BAA4Ba,KAAMF,MAKvDI,EAAW,SAAAC,GAAsC,IAAnCC,EAAmCD,EAAnCC,KAAmCC,EAAAF,EAA7BL,aAA6B,IAAAO,EAAvB,QAAuBA,EAAdC,EAAcH,EAAdG,QACrC,OACItC,EAAAC,EAAAC,cAAA,QACIiB,UAAS,kCAAAoB,OAAoCH,GAC7CE,QAASA,GAETV,EAAUQ,GAAMN,KClB5B,SAASU,EAATL,GAAiD,IAAxB5C,EAAwB4C,EAAxB5C,UAAWkD,EAAaN,EAAbM,WAChC,OACIzC,EAAAC,EAAAC,cAACwC,EAAD,CACAN,KAAK,QACLN,MAAOvC,EAAY,UAAY,UAC/B+C,QAASG,ICLjB,SAASE,EAATR,GAAkC,IAAXS,EAAWT,EAAXS,SACnB,OACI5C,EAAAC,EAAAC,cAACwC,EAAD,CACAN,KAAK,SACLE,QAASM,UCFjB,SAASC,EAAU/F,GACf,OACIkD,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,YACVnB,EAAAC,EAAAC,cAACsC,EAAD,CACIjD,UAAWzC,EAAMyC,UACjBkD,WAAY3F,EAAM2F,aAEtBzC,EAAAC,EAAAC,cAAA,KACIiB,UAAS,cAAAoB,OAAgBzF,EAAMyC,WAAa,yBAE3CzC,EAAM8C,MAEXI,EAAAC,EAAAC,cAACyC,EAAD,CACIC,SAAU9F,EAAM8F,kBCdhC,SAASE,IAAW,IAAA5F,EAEwBP,IAAMQ,SAAS,IAFvCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAET6F,EAFS3F,EAAA,GAEK4F,EAFL5F,EAAA,GAAA6D,EAOZtE,IAAMuE,WAAWxE,GAFjB2D,EALYY,EAKZZ,QACAlB,EANY8B,EAMZ9B,aAYE8D,EAAW,SAAC1B,GAEdA,EAAM2B,iBAEN7C,EAAQ0C,GAER5D,GAAa,GAEb6D,EAAgB,KAGpB,OACGhD,EAAAC,EAAAC,cAAA,QAAM+C,SAAWA,GACZjD,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,YACIE,MAAO2C,EACPzB,SAxBK,SAACC,GACdyB,EAAgBzB,EAAMG,OAAOtB,QAwBrBiB,YAAY,mCAEhBrB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,4BACXnB,EAAAC,EAAAC,cAAA,UACIkC,KAAK,SACLjB,UAAU,0CACVmB,QA3BC,WACbnD,GAAa,KAuBL,YAOAa,EAAAC,EAAAC,cAAA,UACIkC,KAAK,SACLjB,UAAU,uCACVmB,QAASW,GAHb,qBC9ChB,SAASE,EAAiBrG,GAKtB,OACIkD,EAAAC,EAAAC,cAAA,UAAQiB,UAAU,mBAClBmB,QANkB,WAClBxF,EAAMqC,aAAa,SAAAiE,GAAS,OAAKA,MAIjC,+BCJR,SAASC,EAATlB,GAA6B,IAAZpB,EAAYoB,EAAZpB,SAEf,OAAOuC,IAASC,aACdvD,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,mBACZJ,GAEHyC,SAASC,eAAe,UCR5B,SAASC,EAATvB,GAA8BA,EAAR5E,MAClB,OAAOyC,EAAAC,EAAAC,cAAA,2CCDX,SAASyD,IACL,OACI3D,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,yBAEXnB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,oBAAb,6BCJZ,SAASyC,IACL,OAAO5D,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,mBAAb,qCCWX,SAAS0C,IAAS,IAAA5C,EASVtE,IAAMuE,WAAWxE,GAPnBa,EAFY0D,EAEZ1D,MACAI,EAHYsD,EAGZtD,QACA+B,EAJYuB,EAIZvB,cACAe,EALYQ,EAKZR,aACAI,EANYI,EAMZJ,WACA3B,EAPY+B,EAOZ/B,UACAC,EARY8B,EAQZ9B,aAGF,OACIa,EAAAC,EAAAC,cAACF,EAAAC,EAAM6D,SAAP,KACE9D,EAAAC,EAAAC,cAAC6D,EAAD,MACA/D,EAAAC,EAAAC,cAAC8D,EAAD,MAEAhE,EAAAC,EAAAC,cAAC+D,EAAD,KACG1G,GAASyC,EAAAC,EAAAC,cAACwD,EAAD,MACT/F,GAAWqC,EAAAC,EAAAC,cAACgE,EAAD,OACTvG,IAAY+B,EAAcF,QAAWQ,EAAAC,EAAAC,cAACiE,EAAD,MAEvCzE,EAAc0E,IAAI,SAAA9E,GAAI,OACrBU,EAAAC,EAAAC,cAACmE,EAAD,CACEC,IAAKhF,EAAKM,KACVA,KAAMN,EAAKM,KACXL,UAAWD,EAAKC,UAChBkD,WAAY,kBAAMhC,EAAanB,EAAKM,OACpCgD,SAAU,kBAAM/B,EAAWvB,EAAKM,cAKnCV,GACDc,EAAAC,EAAAC,cAACqE,EAAD,KACEvE,EAAAC,EAAAC,cAACsE,EAAD,OAIJxE,EAAAC,EAAAC,cAACuE,EAAD,CACEtF,aAAgBA,KCzCbuF,MARf,WACE,OACE1E,EAAAC,EAAAC,cAACrD,EAAD,KACEmD,EAAAC,EAAAC,cAAC2D,EAAD,cCFOP,IAASqB,WAAWnB,SAASC,eAAe,SACpDmB,OACH5E,EAAAC,EAAAC,cAACF,EAAAC,EAAM4E,WAAP,KACE7E,EAAAC,EAAAC,cAAC4E,EAAD","file":"static/js/main.5eb43a5c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useLocalStorage } from './useLocalStorage';\r\n\r\n// Al crear el contexto también podemos pasarle un valor inicial entre los paréntesis\r\nconst  ToDoContext = React.createContext();\r\n\r\nfunction ToDoProvider (props) {\r\n\r\n    // Nos traemos todo el estado y las funciones de nuestra aplicación que queremos globales\r\n    const {\r\n        item: todos,\r\n        saveItem: saveTodos,\r\n        loading,\r\n        error,\r\n    } = useLocalStorage('TODOS_V1', []);\r\n\r\n    const [searchValue, setSearchValue] = React.useState('');\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n\r\n    const completedTodos = todos.filter(todo => !!todo.completed).length;\r\n    const totalToDos = todos.length;\r\n\r\n    let searchedTodos = [];\r\n\r\n    if (!searchValue.length >= 1) {\r\n        searchedTodos = todos;\r\n    } else {\r\n        searchedTodos = todos.filter(todo => {\r\n        const todoText = todo.text.toLowerCase();\r\n        const searchText = searchValue.toLowerCase();\r\n        return todoText.includes(searchText);\r\n        });\r\n    }\r\n\r\n    const addTodo = (text) => {\r\n        const newTodos = [...todos];\r\n        newTodos.push({\r\n            completed: false,\r\n            text,\r\n        });\r\n        saveTodos(newTodos);\r\n    };\r\n\r\n    const completeTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        let estado = newTodos[todoIndex].completed;\r\n        newTodos[todoIndex].completed = estado ? false : true;\r\n        saveTodos(newTodos);\r\n    };\r\n\r\n    const deleteTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        newTodos.splice(todoIndex, 1);\r\n        saveTodos(newTodos);\r\n    };\r\n\r\n    // Retornamos nuestro proveedor con nuestro contexto en la etiqueta value,\r\n    // que recibirá a toda nuestra aplicación, por eso necesitamos la prop children\r\n\r\n    return(\r\n        <ToDoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            totalToDos,\r\n            completedTodos,\r\n            searchValue,\r\n            setSearchValue,\r\n            searchedTodos,\r\n            addTodo,\r\n            completeTodo,\r\n            deleteTodo,\r\n            openModal,\r\n            setOpenModal,\r\n        }}>\r\n            {props.children}\r\n        </ToDoContext.Provider>\r\n    );\r\n}\r\n\r\n// Exportamos nuestro proveedor y nuestro contexto, en el context también esta el consumer, para acceder a nuestro contexto\r\nexport { ToDoContext, ToDoProvider };\r\n\r\n","import React from 'react';\r\n\r\n// Recibimos como parámetros el nombre y el estado inicial de nuestro item.\r\nfunction useLocalStorage(itemName, initialValue) {\r\n    const[error, setError] = React.useState(false);\r\n    const[loading, setLoading] = React.useState(true);\r\n    const[item, setItem] = React.useState(initialValue);\r\n\r\n    React.useEffect(() => {\r\n      setTimeout(() => {\r\n        try{\r\n          // Guardamos nuestro item en una constante\r\n          const localStorageItem = localStorage.getItem(itemName);\r\n          let parsedItem;\r\n      \r\n          // Utilizamos la lógica que teníamos, pero ahora con las variables y parámentros nuevos\r\n          if (!localStorageItem) {\r\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n            parsedItem = initialValue;\r\n          } else {\r\n            parsedItem = JSON.parse(localStorageItem);\r\n          }\r\n\r\n          setItem(parsedItem);\r\n          setLoading(false);\r\n        } catch(error) {\r\n            setError(error);\r\n        }\r\n      }, 3000);\r\n    });\r\n\r\n    // Actualizamos la función para guardar nuestro item con las nuevas variables y parámetros\r\n    const saveItem = (newItem) => {\r\n      try{\r\n        const stringifiedItem = JSON.stringify(newItem);\r\n        localStorage.setItem(itemName, stringifiedItem);\r\n        setItem(newItem);\r\n      } catch(error) {\r\n        setError(error);\r\n      }  \r\n    };\r\n  \r\n    // Regresamos los datos que necesitamos\r\n    return {\r\n      item,\r\n      saveItem,\r\n      loading,\r\n      error,\r\n    };\r\n  }\r\n\r\n  export { useLocalStorage };","import React from 'react';\nimport { ToDoContext } from '../ToDoContext';\nimport './ToDoCounter.css';\n\n// Desestructuramos los props que pasamos al componente\nfunction ToDoCounter() {\n    const {totalToDos, completedTodos} = React.useContext(ToDoContext);\n\n    return (\n        <h2 className='ToDoCounter'>Has completado {completedTodos} de {totalToDos} TO DOs</h2>\n    );\n}\n\nexport { ToDoCounter };","import React from 'react';\nimport { ToDoContext } from '../ToDoContext';\nimport './ToDoSearch.css';\n\nfunction ToDoSearch () {\n    const {searchValue, setSearchValue} = React.useContext(ToDoContext);\n\n    const onSearchValueChange = (event) => {\n        console.log(event.target.value);\n        setSearchValue(event.target.value);\n    };\n\n    return (\n        <input \n        className=\"ToDoSearch\" \n        placeholder=\"Search ...\"\n        value={searchValue}\n        onChange={onSearchValueChange}\n        />\n    );\n}\n\nexport { ToDoSearch };","import React from 'react';\nimport './ToDoList.css';\n   \nfunction ToDoList (props) {\n    return (\n        <section className='ToDoList'>\n            <ul>\n                {props.children}\n            </ul>\n        </section>\n    );\n}\n\nexport { ToDoList };","import React from 'react';\r\nimport './ToDoIcon.css';\r\nimport { BsTrash } from \"react-icons/bs\";\r\nimport { BsCheckCircle } from \"react-icons/bs\";\r\n\r\nconst iconTypes = {\r\n    \"check\" : color => (\r\n        <BsCheckCircle className='Icon-svg Icon-svg--check' fill={color} />\r\n    ),\r\n    \"delete\" : color => (\r\n        <BsTrash className='Icon-svg Icon-svg--delete' fill={color}/>\r\n    ),\r\n};\r\n\r\n\r\nconst ToDoIcon = ({ type, color='black', onClick }) => {\r\n    return (\r\n        <span\r\n            className={`Icon-container Icon-container--${type}`}\r\n            onClick={onClick}\r\n        >\r\n           {iconTypes[type](color)}     \r\n        </span>       \r\n    );\r\n  }\r\n\r\n\r\nexport { ToDoIcon };","import React from 'react';\r\nimport { ToDoIcon } from './index';\r\n\r\nfunction CompleteIcon ({ completed, onComplete}) {\r\n    return (\r\n        <ToDoIcon\r\n        type=\"check\"\r\n        color={completed ? '#4caf50' : '#503459'}\r\n        onClick={onComplete}\r\n        />\r\n    );\r\n};                                                                       \r\n\r\nexport { CompleteIcon };","import React from 'react';\r\nimport { ToDoIcon } from './index';\r\n\r\nfunction DeleteIcon ({ onDelete}) {\r\n    return (\r\n        <ToDoIcon\r\n        type=\"delete\"\r\n        onClick={onDelete}\r\n        />\r\n    );\r\n};\r\n\r\nexport { DeleteIcon };","import React from 'react';\nimport { CompleteIcon } from '../ToDoIcon/CompleteIcon';\nimport { DeleteIcon } from '../ToDoIcon/DeleteIcon';\nimport './ToDoItem.css';\n   \nfunction ToDoItem (props) {\n    return (\n        <li className=\"TodoItem\">\n            <CompleteIcon\n                completed={props.completed}\n                onComplete={props.onComplete}\n            />\n            <p \n                className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}\n            >\n                {props.text}\n            </p>\n            <DeleteIcon\n                onDelete={props.onDelete}\n            />\n        </li>\n    );\n}\n\nexport { ToDoItem };\n\n","import React from 'react';\r\nimport { ToDoContext } from '../ToDoContext';\r\nimport './ToDoForm.css';\r\n\r\nfunction ToDoForm() {\r\n    // Creamos un estado para nuestro nuevo TODO\r\n    const [newToDoValue, setNewToDoValue] = React.useState('');\r\n    // Desestructuramos las funciones que necesitamos para añadir un TODO y cerrar nuestro modal\r\n    const {\r\n        addTodo,\r\n        setOpenModal,\r\n    } = React.useContext(ToDoContext)\r\n\r\n    // Creamos una función para actualizar el estado de nuestro nuevo TODO\r\n    const onChange = (event) => {\r\n        setNewToDoValue(event.target.value);\r\n    };\r\n    // Función para cerrar el modal\r\n    const onCancel = () => {\r\n        setOpenModal(false);\r\n    };\r\n    // Función para agregar nuestro nuevo TODO\r\n    const onSubmit = (event) => {\r\n        // prevent default para evitar recargar la página\r\n        event.preventDefault();\r\n        // Utilizamos nuestra función para añadir nuestro TODO\r\n        addTodo(newToDoValue);\r\n        // Cerramos nustro modal\r\n        setOpenModal(false);\r\n        // También estaría bien resetear nuestro formulario\r\n        setNewToDoValue('');\r\n    };\r\n\r\n    return (\r\n       <form onSubmit= {onSubmit}>\r\n            <label>Escribe tu nuevo To Do</label>\r\n            <textarea\r\n                value={newToDoValue}\r\n                onChange={onChange}\r\n                placeholder='Escribe aquí tu nueva tarea'\r\n            />\r\n            <div className=\"TodoForm-buttonContainer\">\r\n                <button\r\n                    type='button'\r\n                    className=\"TodoForm-button TodoForm-button--cancel\"\r\n                    onClick={onCancel}\r\n                > \r\n                    Cancelar\r\n                </button>\r\n                <button\r\n                    type='submit'\r\n                    className=\"TodoForm-button TodoForm-button--add\"\r\n                    onClick={onSubmit}\r\n                >\r\n                    Añadir\r\n                </button>\r\n            </div>\r\n       </form> \r\n    )\r\n};\r\n\r\nexport { ToDoForm };","import React from 'react';\nimport './CreateToDoButton.css';\n   \nfunction CreateToDoButton(props){\n    const onClickButton = () => {\n        props.setOpenModal(prevState => !prevState);\n    };\n\n    return (\n        <button className='CreateToDoButton'\n        onClick={onClickButton}\n        > \n        + \n        </button>\n    );\n}\n\nexport { CreateToDoButton };\n\n","import React from 'react';\r\n// Necesitamos ReactDOM para renderizar nuestro modal en el DOM\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.css';\r\n\r\nfunction Modal({ children }) {\r\n  // ReactDom tiene este método para crear portales\r\n  return ReactDOM.createPortal(\r\n    <div className=\"ModalBackground\">\r\n      {children}\r\n    </div>,\r\n    document.getElementById('modal')\r\n  );\r\n}\r\n\r\nexport { Modal };","import React from 'react';\r\n//import './ToDosError.css';\r\n\r\nfunction ToDosError ({error}) {\r\n    return <p>¡Crea tu primer TODO!</p>;\r\n}\r\n\r\nexport { ToDosError };","import React from 'react';\r\nimport './ToDosLoading.css';\r\n\r\nfunction ToDosLoading () {\r\n    return (\r\n        <div className='LoadingTodo-Container'>\r\n            {/* <span className='LoadingTodo-completeIcon'></span> */}\r\n            <p className='LoadingTodo-text'>Cargando To DOs...</p>\r\n            {/* <span className='LoadingTodo-deleteIcon'></span> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { ToDosLoading };","import React from 'react';\r\nimport './EmptyToDos.css';\r\n\r\nfunction EmptyToDos () {\r\n    return <p className='EmptyToDos-text'>Agrega un nuevo To Do a tu lista.</p>;\r\n}\r\n\r\nexport { EmptyToDos };","import React from 'react';\r\n//Importamos nuestro contexto\r\nimport { ToDoContext } from '../ToDoContext';\r\nimport { ToDoCounter } from '../ToDoCounter';\r\nimport { ToDoSearch } from '../ToDoSearch';\r\nimport { ToDoList } from '../ToDoList';\r\nimport { ToDoItem } from '../ToDoItem';\r\nimport { ToDoForm } from '../ToDoForm';\r\nimport { CreateToDoButton } from '../CreateToDoButton';\r\nimport { Modal } from '../Modal';\r\nimport { ToDosError } from '../ToDosError';\r\nimport { ToDosLoading } from '../ToDosLoading';\r\nimport { EmptyToDos } from '../EmptyToDos';\r\n\r\n\r\nfunction AppUI () {  \r\n    const {\r\n      error,\r\n      loading,\r\n      searchedTodos,\r\n      completeTodo,\r\n      deleteTodo,\r\n      openModal,\r\n      setOpenModal,\r\n    } = React.useContext(ToDoContext);\r\n\r\n    return(\r\n        <React.Fragment>\r\n          <ToDoCounter />\r\n          <ToDoSearch />\r\n        \r\n          <ToDoList>\r\n            {error && <ToDosError />}\r\n            {loading && <ToDosLoading /> }\r\n            {(!loading && !searchedTodos.length) && <EmptyToDos />}\r\n            \r\n            {searchedTodos.map(todo => (\r\n              <ToDoItem\r\n                key={todo.text}\r\n                text={todo.text}\r\n                completed={todo.completed}\r\n                onComplete={() => completeTodo(todo.text)}\r\n                onDelete={() => deleteTodo(todo.text)}\r\n              />\r\n            ))}\r\n          </ToDoList>\r\n\r\n          {!!openModal && (\r\n            <Modal>\r\n              <ToDoForm/>\r\n            </Modal>\r\n          )}\r\n  \r\n          <CreateToDoButton\r\n            setOpenModal = {setOpenModal} \r\n          />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport { AppUI };","import React from 'react';\nimport { ToDoProvider } from '../ToDoContext';\nimport { AppUI } from './AppUI';\n\n\nfunction App() { \n  return (\n    <ToDoProvider>\n      <AppUI />\n    </ToDoProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n\n"],"sourceRoot":""}